def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

static def getDate() {
    new Date().format('yyyy.MM.dd.HH.mm')
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.ray.uptodo"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false           
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        
        applicationId "com.ray.uptodo"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {

        debug {
            keyAlias "androiddebugkey"
            keyPassword "android"
            storeFile file("../uptodo_debug.keystore")
            storePassword "android"
        }

        // TODO: Add signinging configs for the release build.
        release {

        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
        }


        release {
            // TODO: Change config for the release build.
            signingConfig signingConfigs.debug 
            minifyEnabled true
            shrinkResources true
        }
    }

    flavorDimensions "flavors"

    productFlavors {
        staging {
            dimension "flavors"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev-${getDate()}"
            resValue "string", "app_name", "UpTodo Dev"
            resValue "string", "is_debug", "true"
            
        }
        
        production {
            dimension "flavors"
            resValue "string", "app_name", "UpTodo"
            resValue "string", "is_debug", "false"
            
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.5.0'
    implementation 'androidx.multidex:multidex:2.0.1'
}
